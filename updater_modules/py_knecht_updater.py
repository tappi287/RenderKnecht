"""py_knecht_updater - console tool to update application executable in remote locationCopyright (C) 2017 Stefan Tapper, All rights reserved.    This file is part of RenderKnecht Strink Kerker.    RenderKnecht Strink Kerker is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation, either version 3 of the License, or    (at your option) any later version.    RenderKnecht Strink Kerker is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with RenderKnecht Strink Kerker.  If not, see <http://www.gnu.org/licenses/>."""import osimport sysfrom pathlib import Pathfrom updater_modules.sftp import remote# Change cwd to parent pathcwd_dir = os.path.join(os.path.dirname(__file__), '../')cwd_dir = os.path.abspath(cwd_dir)os.chdir(cwd_dir)exe_name = 'RenderKnecht_String-Kerker.exe'def init_debug():    if getattr(sys, 'frozen', False):        # running in a bundle        run_in_debug = False        return False    else:        # running live        run_in_debug = True        return Trueprint('Running in Debug: ' + str(init_debug()))def read_version_info(file_object):    remote_version = file_object.readline()if __name__ == '__main__':    # Path to replace executable    if len(sys.argv) >= 2:        arg = Path(sys.argv[1])        if arg.exists():            print(str(arg))            sys.exit()    sftp = remote()    # Connect    print(sftp.connect())    # Change dir to remote updater dir    sftp.chdir('knecht_updater')    # sftp.listdir('.')    # Upload if local dist path available    local_dist_path = Path('dist')    if local_dist_path.exists():        print('Lokalen Distributions Ordner gefunden. Aktualisiere entfernten Speicher.')        # Update version info        version_file_path = local_dist_path / 'version.txt'        if version_file_path.exists():            sftp.put(version_file_path)        localpath = local_dist_path / exe_name        if localpath.exists():            sftp.put(localpath)            sftp.disconnect()            print('\nProgramm wird beendet.')            sys.exit()